// Code generated by hertz generator.

package main

import (
	"context"
	"fmt"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/hertz-contrib/sessions"
	"github.com/hertz-contrib/sessions/cookie"
	"personal-page-be/biz/container"
	"time"
)

var App *container.Container

func main() {
	App = container.GetContainer("conf/config.yaml")

	h := server.Default(server.WithExitWaitTime(3*time.Second), server.WithHostPorts(App.Config.HttpConfig.Address), server.WithMaxRequestBodySize(100*1024*1024))
	store := cookie.NewStore([]byte("secret"))
	h.Use(sessions.New("user", store))
	register(h)
	h.OnShutdown = append(h.OnShutdown, func(ctx context.Context) {
		fmt.Println("hook 1")
		<-ctx.Done()
		fmt.Println("exit timeout!")
	})

	h.OnShutdown = append(h.OnShutdown, func(ctx context.Context) {
		fmt.Println("hook 2")
	})
	h.Spin()
}
